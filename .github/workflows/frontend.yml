# name of your CICD code
name: Build FRONTEND

# # when or what event needs for begin running the code
# on:
#   push:
#     branches:
#       - main
#       - 'releases/**'

# when or what event needs for begin running the code
on:
  # push:
  #   branches:
  #     - frontend_dev
  pull_request:
    branches:
      - frontend_main
  # schedule: # frequence to launch actions. see this link https://crontab.guru/
  #   - cron: "0 0 * * 1" # at 00:00 on Monday

# jobs you want to run
jobs:
  ML-model-building-actions:
    # name: Checks, Test and Run FRONTEND - Windows # define the name of job
    # runs-on: windows-latest # define the machine where the code will run, Windows here   
    # defaults:
    #   run:
    #     working-directory: ./frontend/

    name: Checks, Test and Run FRONTEND - Linux # define the name of job
    runs-on: ubuntu-latest # define the machine where the code will run, Lunix here  
    defaults:
      run:
        working-directory: ./frontend/

    # name: Checks, Test and Run FRONTEND - Macos # define the name of job
    # runs-on: macos-latest # define the machine where the code will run, MacOS here
    # defaults:
    #   run:
    #     working-directory: ./frontend/

    strategy:
      matrix:
        python-version: [3.11] # [3.9, 3.10, 3.11, 3.12]

    steps:
      - name: checkout code 
        uses: actions/checkout@v4 # define action to run at the step "checkout code", action can bee found on https://github.com/marketplace/actions

      # Here we begin CI (Continuous Integration)
      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}

      # - name: prepare python virtual environement - Windows
      #   shell: pwsh
      #   run: |
      #     python -m venv venv
      #     .\venv\Scripts\activate

      - name: prepare python virtual environement - Linux  
        shell: bash
        run: |
          python -m venv venv
          source venv/bin/activate

      # - name: install and upgrade pip and tox - Windows
      #   shell: pwsh
      #   run: |
      #     python.exe -m pip install --upgrade pip
      #     python.exe -m pip install --user tox
      #     python.exe -m pip install --upgrade tox

      - name: install and upgrade pip and tox - Linux
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user tox
          python -m pip install --upgrade tox

      # - name: test and run frontend app - checks, test and run frontend app - Windows
      #   shell: pwsh
      #   run: |
      #     tox run

      - name: test and run frontend app - checks, test and run frontend app - Linux
        shell: bash
        run: |
          tox run

      # - name: test and run frontend app - checks, test and run frontend app - Windows
      #   shell: pwsh
      #   run: |
      #     tox run -e typechecks
      #     tox run -e stylechecks
      #     tox run -e lint
      #     tox run -e run_app

      # - name: test and run frontend app - checks, test and run frontend app - Linux
      #   shell: bash
      #   run: |
      #     tox run -e typechecks
      #     tox run -e stylechecks
      #     tox run -e lint
      #     tox run -e run_app
