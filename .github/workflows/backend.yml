# name of your CICD code
name: Build BACKEND

# # when or what event needs for begin running the code
# on:
#   push:
#     branches:
#       - build_backend
#       - 'releases/**'

# when or what event needs for begin running the code
on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main
  # schedule: # frequence to launch actions. see this link https://crontab.guru/
  #   - cron: "0 0 * * 1" # at 00:00 on Monday

# jobs you want to run
jobs:
  ML-model-building-actions:
    name: Checks, Fetch data, Train and Test ML model # define the name of job
    # runs-on: ubuntu-latest # define the machine where the code will run, Lunix here
    # runs-on: macos-latest # define the machine where the code will run, MacOS here
    runs-on: windows-latest # define the machine where the code will run, Windows here   
    defaults:
      run:
        working-directory: ./backend/
    
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    # define the environment variable for KAGGLE account
    env:
      KAGGLE_USERNAME: ${{secrets.KAGGLE_USERNAME}}
      KAGGLE_KEY: ${{secrets.KAGGLE_KEY}}
      # GEMFURY_PUSH_URL: ${{secrets.GEMFURY_PUSH_URL}}

    steps:
      - name: checkout code 
        uses: actions/checkout@v4 # define action to run at the step "checkout code", action can bee found on https://github.com/marketplace/actions
      
      # Here we begin CI (Continuous Integration)
      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
      
      - name: prepare python virtual environement
        shell: pwsh
        run: |
          python -m venv venv
          .\venv\Scripts\activate
          # source venv/bin/activate # for Linux
          # .\venv\Scripts\activate # for windows
      
      - name: install and upgrade pip, tox and kaggle 
        shell: pwsh
        run: |
          python.exe -m pip install --upgrade pip
          python.exe -m pip install --user tox
          python.exe -m pip install --upgrade tox
          python.exe -m pip install --user kaggle
          python.exe -m pip install --upgrade kaggle

      # - name: create folder and copy kaggle.json
      #   shell: pwsh
      #   run: |
      #     $kaggleDir = "C:\Users\runneradmin\.kaggle"
      #     New-Item -ItemType Directory -Path C:\Users\runneradmin\.kaggle -Force
      #     Move-Item .\kaggle.json C:\Users\runneradmin\.kaggle -Force

      # - name: create folder and copy kaggle.json
      # - shell: bash
      #   run: |
      #     mkdir old/path/new-subdir
      #     mv old/path/* old/path/new-subdir/

      - name: Setup Kaggle for Windows
        run: |
          $kaggleDir = "C:\Users\runneradmin\.kaggle"
          New-Item -ItemType Directory -Path $kaggleDir -Force
          '{ "username": "KAGGLE_USERNAME", "key": "KAGGLE_KEY" }' | Out-File -FilePath "$kaggleDir\kaggle.json" -Force
          # icacls "$kaggleDir\kaggle.json" /inheritance:r
          # icacls "$kaggleDir\kaggle.json" /grant:r "$($env:USERNAME):(R)"
      
      # - name: Setup Kaggle for Linux
      #   run: |
      #     mkdir $HOME/.kaggle
      #     echo '{"username":"${{ secrets.KAGGLE_USERNAME }}","key":"${{ secrets.KAGGLE_KEY }}"}' > $HOME/.kaggle/kaggle.json
      #     chmod 600 $HOME/.kaggle/kaggle.json

      - name: build ML model - checks, fetch data, train and test model
        shell: pwsh
        run: |
          tox run

      # - name: build ML model - checks, fetch data, train and test model
      #   shell: pwsh
      #   run: |
      #     tox run -e typechecks
      #     tox run -e stylechecks
      #     tox run -e lint
      #     tox run -e fetch_data
      #     tox run -e train_model
      #     tox run -e test_model
